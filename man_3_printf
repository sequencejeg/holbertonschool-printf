.TH _PRINTF 3 "21 March 2024" "version 1.0" "Custom _printf Function Manual"
.SH NAME
_printf \- custom implementation of the printf function.
.SH SYNOPSIS
.B #include "main.h"
.sp
.B int _printf(const char *format, ...);
.SH DESCRIPTION
The
.B _printf
function is a custom implementation of the standard library function
.BR printf(3).
It writes output to stdout, the standard output stream, under the control of the
.B format
string that specifies how subsequent arguments (accessed via the variable-length argument facilities of
.B stdarg(3))
are converted for output.
.P
The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character % and ends with a conversion specifier.
.P
The implemented conversion specifiers are:
.RS
.TP
.B %c
Prints a single character.
.TP
.B %s
Prints a string (char *).
.TP
.B %%
Prints a percent sign.
.RE
.SH RETURN VALUE
Upon successful return, these functions return the number of characters printed (excluding the null byte used to end output to strings). If an output error is encountered, a negative value is returned.
.SH ERRORS
The behavior of
.B _printf
is undefined if the format string contains any invalid format specifiers or if any arguments are not of the appropriate type for the corresponding conversion specifier.
.SH EXAMPLES
To print a string followed by a newline:
.sp
.nf
.B #include "main.h"
.sp
.B int main(void)
{
    _printf("Hello, world!\n");
    return (0);
}
.fi
.sp
This will output:
.sp
.nf
Hello, world!
.fi
.SH SEE ALSO
.BR printf(3),
.BR stdarg(3)
.SH AUTHORS
Written by Jeremy Etienne and Ramon Vega, as part of the curriculum of Holberton School.
